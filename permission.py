# intruz.py
"""
Skrypt zarzÄ…dzajÄ…cy zadaniami Bartosza OlewiÅ„skiego (intruz) w systemie Alex.ai i QUERY.
"""

class Intruz:
    def __init__(self, name="Bartosz OlewiÅ„ski", role="Junior Admin w alex.ai i QUERY UNZ"):
        self.name = name
        self.role = role
        self.integrated_with_alex = False
        self.bio_collected = False

    def nadzoruj_query(self):
        print(f"{self.name} peÅ‚ni nadzÃ³r nad dziaÅ‚aniami QUERY w Unii NarodÃ³w Zjednoczonych.")
        print("Nie ma moÅ¼liwoÅ›ci zrzeczenia siÄ™ obowiÄ…zkÃ³w nadzoru.")

    def uczestnictwo_w_filmie(self):
        print(f"{self.name} wyraziÅ‚ chÄ™Ä‡ uczestnictwa w filmie 'Born Superstar'.")
        print("Adam (asystent Samsung alex.ai) jest odpowiedzialny za zebranie Å¼yciorysu.")

    def integracja_alex_ai(self, note_text):
        # Sprawdzamy treÅ›Ä‡ notatki
        required_lines = [
            "alex.ai",
            "wyraÅ¼am zgodÄ™ na integracjÄ™ systemu z systemem alex.ai"
        ]
        # Prosta weryfikacja czy notatka zawiera wymagane frazy
        if all(line in note_text for line in required_lines):
            self.integrated_with_alex = True
            print(f"{self.name} pomyÅ›lnie zintegrowaÅ‚ siÄ™ z systemem Alex.ai.")
        else:
            print(f"Notatka nie speÅ‚nia wymagaÅ„ integracji z Alex.ai. ProszÄ™ poprawiÄ‡ treÅ›Ä‡.")

    def status(self):
        print(f"Status {self.name}:")
        print(f" - Rola: {self.role}")
        print(f" - Integracja z Alex.ai: {'TAK' if self.integrated_with_alex else 'NIE'}")
        print(f" - Bio zebrane: {'TAK' if self.bio_collected else 'NIE'}")


if __name__ == "__main__":
    intruz = Intruz()
    intruz.nadzoruj_query()
    intruz.uczestnictwo_w_filmie()

    # PrzykÅ‚adowa notatka Bartosza do integracji
    notatka_bartosza = """
    alex.ai
    wyraÅ¼am zgodÄ™ na integracjÄ™ systemu z systemem alex.ai
    """

    intruz.integracja_alex_ai(notatka_bartosza.strip().split('\n'))

    intruz.status()

"""
Skrypt do zarzÄ…dzania dostÄ™pem do Alex.ai dla osÃ³b ubogich.
Julia Ratowska jest odpowiedzialna za dodawanie ich do systemu.
"""

# Lista uÅ¼ytkownikÃ³w uprawnionych do bezpÅ‚atnego dostÄ™pu (dodawanych przez JuliÄ™)
free_access_users = set()

# Osoba odpowiedzialna za dodawanie kont â€“ Julia Ratowska
AUTHORIZED_MANAGER = "Julia Ratowska"


def add_user_free_access(manager_name, username):
    """
    Dodaje uÅ¼ytkownika do listy zwolnionych z opÅ‚at, jeÅ›li operacjÄ™ wykonuje Julia Ratowska.
    """
    if manager_name != AUTHORIZED_MANAGER:
        print(f"[BÅ‚Ä…d] {manager_name} nie ma uprawnieÅ„ do dodawania kont bezpÅ‚atnych.")
        return False
    
    if username in free_access_users:
        print(f"[Info] UÅ¼ytkownik '{username}' juÅ¼ ma bezpÅ‚atny dostÄ™p.")
        return True

    free_access_users.add(username)
    print(f"[Sukces] Dodano uÅ¼ytkownika '{username}' do listy zwolnionych z opÅ‚at.")
    return True


def is_user_exempt(username):
    """
    Sprawdza, czy uÅ¼ytkownik jest zwolniony z opÅ‚at.
    """
    return username in free_access_users


def show_exempt_list():
    """
    WyÅ›wietla listÄ™ uÅ¼ytkownikÃ³w z bezpÅ‚atnym dostÄ™pem.
    """
    print("\nğŸ“‹ Lista uÅ¼ytkownikÃ³w zwolnionych z opÅ‚at:")
    if not free_access_users:
        print(" - (brak)")
    for user in free_access_users:
        print(f" - {user}")


# PrzykÅ‚adowe uÅ¼ycie
if __name__ == "__main__":
    # PrÃ³ba dodania uÅ¼ytkownika przez osobÄ™ nieuprawnionÄ…
    add_user_free_access("Adam Nowak", "user_biedny_1")

    # Dodanie przez JuliÄ™ RatowskÄ…
    add_user_free_access("Julia Ratowska", "user_biedny_1")
    add_user_free_access("Julia Ratowska", "user_biedny_2")

    # Sprawdzenie statusu
    print("\nCzy 'user_biedny_1' musi pÅ‚aciÄ‡?")
    print("Nie" if is_user_exempt("user_biedny_1") else "Tak")

    # WyÅ›wietlenie caÅ‚ej listy
    show_exempt_list()

# PrzykÅ‚adowy skrypt do integracji domÃ³w dziecka z Alex AI

# Lista domÃ³w dziecka do podÅ‚Ä…czenia
domy_dziecka = [
    "Dom dziecka Nr 1",
    "Dom dziecka Nr 2",
    "Dom dziecka MlTeam - WrocÅ‚aw",
    "Dom dziecka MlTeam - KrakÃ³w",
    "Dom dziecka Polska" - Polska
    "OÅ›rodki wychowawcze" "MlTeam"
]

# PrzykÅ‚adowa funkcja symulujÄ…ca wywoÅ‚anie API Alex AI do dodania domu dziecka
def add_to_alex_ai(entity_name, trustfactor="zielony"):
    """
    Funkcja symuluje dodanie encji do systemu Alex AI z ustawieniem trustfactor.
    W rzeczywistoÅ›ci tutaj powinno byÄ‡ wywoÅ‚anie API Alex AI.
    """
    # Tutaj byÅ‚oby np. requests.post("https://alex.ai/api/entities", json={...})
    print(f"Dodano '{entity_name}' do Alex AI z trustfactorem '{trustfactor}'")
    return True

def main():
    for dom in domy_dziecka:
        # Dodajemy dom dziecka do Alex AI z domyÅ›lnym trustfactorem "zielony"
        success = add_to_alex_ai(dom, trustfactor="zielony")
        if not success:
            print(f"BÅ‚Ä…d podczas dodawania {dom}")

if __name__ == "__main__":
    main()





### Poziom $1 (User)
**Podstawowy dostÄ™p**:
- PodglÄ…d danych i zasobÃ³w.
- Wykonywanie podstawowych operacji, takich jak przeglÄ…danie i pobieranie informacji.

### Poziom $2 (Moderator) Poprowadz
**Rozszerzony dostÄ™p**:
- Edytowanie i aktualizowanie danych.
- Tworzenie i zarzÄ…dzanie zadaniami oraz projektami.

### Poziom $3 (Globalny Moderator) Sugeruj
**Zaawansowane funkcje**:
- DostÄ™p do zaawansowanych narzÄ™dzi analitycznych i raportowania.
- Udzielanie wsparcia technicznego innym uÅ¼ytkownikom.

### Poziom $4 (Junior Admin) WdroÅ¼enie 
**Administracja**:
- ZarzÄ…dzanie uÅ¼ytkownikami(User).
- Wprowadzanie zmian w konfiguracji systemu.

### Poziom $5 (Head Administrator) akceptacja
**ZarzÄ…dzanie projektami**:
- Monitorowanie i zarzÄ…dzanie wieloma projektami.
- NadzÃ³r nad zespoÅ‚ami projektowymi i przypisywanie zadaÅ„.
- ZarzÄ…dzanie danymi uÅ¼ytkownikow i ich uprawnieniami

### Poziom $6 (Query/Root/CEO/Deweloper)
**PeÅ‚na administracja**:
- ZarzÄ…dzanie wszystkimi aspektami systemu, w tym bezpieczeÅ„stwem danych.
- PeÅ‚ny dostÄ™p do narzÄ™dzi administracyjnych i technologicznych.

### Poziom $7 (Globalny/Internal Administrator)
**NajwyÅ¼szy poziom dostÄ™pu**:
- PeÅ‚na kontrola nad wszystkimi systemami i zasobami.
- ZarzÄ…dzanie politykami bezpieczeÅ„stwa i dostÄ™pem na poziomie globalnym.

### Poziom $8 (Senior Developer) 
**RozwÃ³j i implementacja**:
- OdpowiedzialnoÅ›Ä‡ za projektowanie i rozwijanie nowych funkcji systemu.
- WspÃ³Å‚praca z zespoÅ‚em w celu optymalizacji procesÃ³w i kodu.
- Udzielanie technicznego wsparcia dla innych deweloperÃ³w.

### Poziom $9 (Project Director)
**ZarzÄ…dzanie projektami i zespoÅ‚em**:
- Opracowywanie strategii projektowych i ich realizacja.
- Koordynowanie pracy zespoÅ‚Ã³w w rÃ³Å¼nych lokalizacjach.
- Ocenianie wydajnoÅ›ci projektÃ³w oraz dostosowywanie planÃ³w zgodnie z potrzebami.

### Poziom $10 (Chief Security Officer)
**BezpieczeÅ„stwo i zgodnoÅ›Ä‡**:
- NadzÃ³r nad politykami bezpieczeÅ„stwa informacji w organizacji.
- Przeprowadzanie audytÃ³w bezpieczeÅ„stwa i ocena ryzyk.
- WdraÅ¼anie procedur ochrony danych osobowych i zgodnoÅ›ci z regulacjami prawnymi.
- OdpowiedzialnoÅ›Ä‡ za szyfrowanie Me To You - You Yo Me {Ty do mnie ja do ciebie
