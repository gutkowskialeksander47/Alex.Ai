# Projekt: Alex.ai ‚Äì Modu≈Ç Pracownik√≥w z Niepe≈Çnosprawno≈õciami
# Autor: Aleksander Rajca
# Wersja: 1.0

MINIMALNE_WYNAGRODZENIE = 3490  # Przyk≈Çad: Minimalna krajowa brutto (PLN)
UID_SRODKI_OTRZYMANE = False    # Flaga: czy ≈õrodki za UiD zosta≈Çy przelane

# Baza pracownik√≥w z niepe≈Çnosprawno≈õciƒÖ
inwalidzi = {}

# Rejestracja pracownika jako inwalida i administrator
def zglos_inwalide(imie_nazwisko):
    inwalidzi[imie_nazwisko] = {
        "rola": "Administrator",
        "status": "Aktywny",
        "autoryzacja_1euro": False,
        "wynagrodzenie": 0
    }
    print(f"‚úÖ {imie_nazwisko} zosta≈Ç zarejestrowany jako Administrator Alex.ai (Inwalida).")

# Potwierdzenie autoryzacji 1‚Ç¨ (np. przelew, potwierdzenie w aplikacji)
def autoryzuj_1euro(imie_nazwisko):
    if imie_nazwisko in inwalidzi:
        inwalidzi[imie_nazwisko]["autoryzacja_1euro"] = True
        print(f"üí∞ {imie_nazwisko} autoryzowa≈Ç siƒô poprzez wp≈Çatƒô 1‚Ç¨.")
    else:
        print("‚ùå Osoba nie zosta≈Ça wcze≈õniej zarejestrowana jako inwalida.")

# Wyp≈Çata wynagrodzenia po otrzymaniu ≈õrodk√≥w z UiD
def wyplac_wynagrodzenia():
    global UID_SRODKI_OTRZYMANE
    if not UID_SRODKI_OTRZYMANE:
        print("üö´ ≈örodki z UiD nie zosta≈Çy jeszcze otrzymane. Wyp≈Çaty wstrzymane.")
        return

    for osoba in inwalidzi:
        if inwalidzi[osoba]["autoryzacja_1euro"]:
            inwalidzi[osoba]["wynagrodzenie"] = MINIMALNE_WYNAGRODZENIE
            print(f"‚úÖ Wyp≈Çacono wynagrodzenie {MINIMALNE_WYNAGRODZENIE} PLN dla: {osoba}")
        else:
            print(f"‚è≥ {osoba} nie autoryzowa≈Ç siƒô ‚Äì brak wyp≈Çaty.")

# Funkcja aktywacji wyp≈Çat (symuluje otrzymanie ≈õrodk√≥w z UiD)
def aktywuj_fundusze_uid():
    global UID_SRODKI_OTRZYMANE
    UID_SRODKI_OTRZYMANE = True
    print("üíº ≈örodki z
